{
	"info": {
		"_postman_id": "b2824a1b-ce68-4092-93ba-d8877a276c60",
		"name": "petstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18228074"
	},
	"item": [
		{
			"name": "Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"orderId\", pm.variables.replaceIn(\"{{$randomInt}}\"))\r",
							"pm.environment.set(\"petId\", pm.variables.replaceIn(\"{{$randomInt}}\"))\r",
							"pm.environment.set(\"quantity\", pm.variables.replaceIn(\"{{$randomInt}}\"))\r",
							"pm.environment.set(\"status\", pm.variables.replaceIn(\"{{$randomLoremWord}}\"))\r",
							"pm.environment.set(\"complete\", pm.variables.replaceIn(\"{{$randomBoolean}}\"))\r",
							"\r",
							"var currentDate = new Date();\r",
							"currentDate.setDate(currentDate.getDate() + 5);\r",
							"var formattedDate = currentDate.toISOString().slice(0, -1);\r",
							"\r",
							"pm.environment.set(\"shipDate\", formattedDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{orderId}},\r\n  \"petId\": {{petId}},\r\n  \"quantity\": {{quantity}},\r\n  \"shipDate\": \"{{shipDate}}\",\r\n  \"status\": \"{{status}}\",\r\n  \"complete\": {{complete}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v2/store/order",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Order",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v2/store/order/{{orderId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"store",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var order = pm.response.json()\r",
							"\r",
							"var statusCode = pm.response.code\r",
							"if (statusCode == 200){\r",
							"        pm.test(\"Order Id Validation\", function(){\r",
							"        pm.expect(order.id).to.eql(parseInt(pm.environment.get(\"orderId\")))\r",
							"    })\r",
							"    pm.test(\"Pet Id Validation\", function(){\r",
							"        pm.expect(order.petId).to.eql(parseInt(pm.environment.get(\"petId\")))\r",
							"    })\r",
							"    pm.test(\"Order Complete Validation\", function(){\r",
							"        pm.expect(order.complete).to.eql(Boolean(pm.environment.get(\"complete\")))\r",
							"    })\r",
							"}\r",
							"else if(statusCode == 404){\r",
							"    pm.test(\"Not Found\", function(){\r",
							"        pm.response.to.have.status(404)\r",
							"    })\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v2/store/order/{{orderId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"store",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"userId\", pm.variables.replaceIn(\"{{$randomInt}}\"))\r",
							"pm.environment.set(\"userName\", pm.variables.replaceIn(\"{{$randomUserName}}\"))\r",
							"pm.environment.set(\"firstName\", pm.variables.replaceIn(\"{{$randomFirstName}}\"))\r",
							"pm.environment.set(\"lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"))\r",
							"pm.environment.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"))\r",
							"pm.environment.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"))\r",
							"pm.environment.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"))\r",
							"pm.environment.set(\"userStatus\", parseInt(pm.variables.replaceIn(\"{{$randomInt}}\")))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{userId}},\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": {{userStatus}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v2/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"updatedPhone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{userId}},\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"{{updatedPhone}}\",\r\n  \"userStatus\": {{userStatus}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v2/user/{{userName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by Username",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v2/user/{{userName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		}
	]
}